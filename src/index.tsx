import React from 'react'
import ReactDOM from 'react-dom/client'
import './index.css'
import {App} from 'app/ui/App'
import { Provider } from 'react-redux'
import { store } from 'app/store'
import { BrowserRouter } from 'react-router-dom'
import { dimychAge } from './dimich'

const rerenderEntireTree=()=>{
  const root = ReactDOM.createRoot(document.getElementById('root') as HTMLElement)
  root.render(
    <Provider store={store}>
      <BrowserRouter>
        <App />
      </BrowserRouter>
    </Provider>,
  )
}
rerenderEntireTree()


// console.log(dimychAge)


if (process.env.NODE_ENV === 'development' && module.hot) {
  module.hot.accept('./app/ui/App',
    () => {
rerenderEntireTree()
  })
}


/*
–®—Ç—É–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤—Å–µ–º—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è, –∞ –ø–æ–¥—Å–æ–≤—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –∫–∞–∫–∏–µ-—Ç–æ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã,
–∫–æ—Ç–æ—Ä—ã–µ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å –Ω–∞–∑—ã–≤–∞—Ç—å—Å—è HOT RELOADING.

1. —è —Å–æ–∑–¥–∞–ª —Ñ–∞–π–ª dimich.ts--> export const dimychAge=33(—Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞)
2. –¥–æ–±–∞–≤–∏–ª console.log(dimychAge)-->import { dimychAge } from './dimich'(–¥–æ–±–∞–≤–∏–ª –∏–º–ø–æ—Ä—Ç)
3. –¢–µ–ø–µ—Ä—å –ø—Ä–∏ —Å–º–µ–Ω–µ –∑–Ω–∞—á–µ–Ω–∏—è dimychAge –±—É–¥–µ—Ç –ø–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞—Ç—å—Å—è –≤—Å–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.
4. –ù–æ –µ—Å–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –≤ index.tsx –∫–æ–¥
if (process.env.NODE_ENV === 'development' && module.hot) {
  module.hot.accept('./dimich',
    () => {
      console.log(dimychAge)
    })
}
–≤–∑—è—Ç—ã–π –∏ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–π —Å https://redux-toolkit.js.org/usage/usage-guide#manual-store-setup.
–ê –∏–º–µ–Ω–Ω–æ –±—ã–ª –∏–∑–º–µ–Ω–µ–Ω —Ä–µ–∂–∏–º process.env.NODE_ENV === 'development'
5. –ö–æ–¥ –Ω–µ —Å–º–æ–≥ –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ—Ç–æ–º—É —á—Ç–æ –ø—Ä–æ–±–ª–µ–º–∞ —Å —Ç–∏–ø–∏–∑–∞—Ü–∏–µ–π
TS2339: Property hot does not exist on type NodeModule
6. –ë–ª–∞–≥–æ–¥–æ—Ä—è –ø–æ–¥—Å–∫–∞–∑–∫–µ ChatGPT –¥–æ–±–∞–≤–∏–ª –≤ –∫–æ—Ä–µ–Ω—å —Ñ–∞–π–ª —Å –∏–º–µ–Ω–µ–º custom.d.ts –∏ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ–º:
declare module NodeJS {
  interface Module {
    hot?: {
      accept(path?: string, callback?: () => void): void;
    }
  }
}
7. –î–∞–ª–µ–µ –¥–æ–±–∞–≤–∏–ª –≤ package.json -->"include": ["src","custom.d.ts"]
8. –¢–µ–ø–µ—Ä—å –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ —Ñ–∞–π–ª–µ dimich.ts –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π dimychAge –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–∞ —Ç–æ–¥—É–ª–∏—Å—Ç–∞ –Ω–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç,
–∞ –≤ console.log –≤—ã–≤–æ–¥–∏—Ç –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ

9. –ó–∞—á–µ–º –Ω—É–∂–µ–Ω hot loading
üö©–ü–µ—Ä–≤–æ–µ —á—Ç–æ–±—ã –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ UI –Ω–µ –∏–∑–º–µ–Ω—è–ª—Å—è(—É–º–∏—Ä–∞–ª) state.
10. –°–æ–∑–¥–∞–¥–∏–º —Ñ—É–Ω–∫—Ü–∏—é rerenderEntireTree –∏ –æ–±–µ—Ä–Ω–µ–º root
11. –ü–µ—Ä–≤—ã–π —Ä–µ–Ω–¥–µ—Ä –≤—ã–∑–æ–≤–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏-->rerenderEntireTree()
12. –¢–µ–ø–µ—Ä—å –ø–µ—Ä–µ–ø–∏—à–µ–º —Ñ–∞–π–ª –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Å–ª–µ–¥–∏—Ç—å –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ –≤ App.tsx –∏ –≤–ª–æ–∂–µ–Ω–Ω—ã–º–∏ –≤ –Ω–µ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏
if (process.env.NODE_ENV === 'development' && module.hot) {
  module.hot.accept('./app/ui/App',
    () => {
rerenderEntireTree()
  })
}
13. –¢–µ–ø–µ—Ä—å –≤–∞–∂–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —á–µ–≥–æ-—Ç–æ –≤ App.tsx –∏ –≤–ª–æ–∂–µ–Ω–∏—è—Ö –±—É–¥–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è rerenderEntireTree(),
 –Ω–æ store –Ω–µ –±—É–¥–µ—Ç –º—ã –µ–≥–æ —Å–¥–µ–ª–∞–µ–º —á—É—Ç—å –ø–æ–∑–∂–µ.
 14. –ë—É–¥–µ—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–∞ –∏ –ø–æ–π–¥—É—Ç –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä. –†–∞–∑ —Å–¥–µ–ª–∞–ª–∏ –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –±—É–¥–µ—Ç –≤–º–æ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è
 –∑–∞–Ω–æ–≤–æ. –ò –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ useEffect c –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π
   useEffect(() => {
    if (demo) {
      return
    }
    debugger
    initializeApp()
  }, [])
15. –ü—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞—é—Ç—Å—è –¥–∞–Ω–Ω—ã–µ. –ù–æ –ø—Ä–∏ —ç—Ç–æ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –Ω–µ —É–º–∏—Ä–∞–µ—Ç.
16. –ê —Ç–∞–∫ –∫–∞–∫ state –Ω–µ —É–º–∏—Ä–∞–µ—Ç –∑–Ω–∞—á–∏—Ç –æ–Ω —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–∞–∫–∏–µ-—Ç–æ –¥–∞–Ω–Ω—ã–µ –∫–æ—Ç–æ—Ä—ã–µ –æ–Ω –ø–æ–ª—É—á–∏–ª –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–µ.
–ò –∏—Ö –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —á—Ç–æ–±—ã –Ω–µ –¥–µ–ª–∞—Ç—å –ª–∏—à–Ω–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä(–∞ –∏–º–µ–Ω–Ω–æ initializeApp()).
17. –ü–µ—Ä–µ–ø–∏—à–µ–º
  useEffect(() => {
    if (demo) {
      return
    }
    debugger
    initializeApp()
  }, [])
–Ω–∞
  useEffect(() => {
    debugger
    if (!isInitialized) {
      initializeApp()
    }
  }, [])
18. –¢–µ–ø–µ—Ä—å –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –≤ App.tsx –Ω–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –Ω–æ –Ω–µ –∏–¥—É—Ç –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é(initializeApp())
 19. –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º–∞ —Ç–µ–ø–µ—Ä—å —á—Ç–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∫–æ—Ç–æ—Ä—ã–µ –≤–ª–æ–∂–µ–Ω—ã –≤ App.tsx –∑–∞–≤–∏—Å—è—Ç –µ—â–µ –∏ –æ—Ç store –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –ª–æ–º–∞–µ—Ç—Å—è.
 20. –û—Å–Ω–æ–≤–Ω–∞—è –Ω–∞—à–∞ –∑–∞–¥–∞—á–∞ –∏–∑–±–∞–≤–∏—Ç—å—Å—è –æ—Ç –º–∞—Å—Å–æ–≤–æ–π –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏.
 21. –•–æ—Ç–∏–º —á—Ç–æ–±—ã store –Ω–µ –ø–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–ª—Å—è –ø–æ–ª–Ω–æ—Å—Ç—å—é, –∞ –ø–æ–¥–º–µ–Ω—è–ª–∞—Å—å —Ç–æ–ª—å–∫–æ —Ç–∞ —á–∞—Å—Ç—å —á—Ç–æ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å(replaceReducer).
22. Store –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ä–µ–¥—é—Å–µ—Ä–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ –≤ –Ω–µ–≥–æ –ø—Ä–∏—Ö–æ–¥—è—Ç authSlice, appSlice, tasksSlice, todolistsSlice. –ò–∑-–∑–∞ —Ç–æ–≥–æ —á—Ç–æ
–æ–Ω–∏ –ø–æ–º–µ–Ω—è–ª–∏—Å—å —É –Ω–∞—Å –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –≤–µ—Å—å —Ñ–∞–π–ª –∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–µ—Ç—Å—è store. –ü–æ —ç—Ç–æ–º—É –¥–æ–¥–∞–π—Ç–µ –≤—ã–Ω–µ—Å–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ä—É—Ç–æ–≤–æ–≥–æ
—Ä–µ–¥—é—Å–µ—Ä–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ñ–∞–π–ª.
23. –ò —Ç–µ–ø–µ—Ä—å c–æ–∑–¥–∞–¥–∏–º hot reloading –≤ store. –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–µ–∏—è –≤ reducers.ts —Ç–æ –ø–µ—Ä–µ—Ä–∏—Å—É–µ–º store –Ω–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é,
–∞ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ (–Ω–∞ –ª–µ—Ç—É).
if (process.env.NODE_ENV === 'development' && module.hot) {
  module.hot.accept('./reducers',
    () => {
      store.replaceReducer(rootReducer)
    })
}
// replaceReducer –ø–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–º–µ–Ω—è—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π —Ä–µ–¥—é—Å–µ—Ä –Ω–∞ –ª–µ—Ç—É(–¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏)
24. –ö–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –≤–º–æ–Ω—Ç–∏—Ä—É–µ—Ç—Å—è –∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∑–∞–ø—Ä–æ—Å –∑–∞ –¥–∞–Ω–Ω—ã–º–∏ (todolists,tasks) –Ω–∞—à–∞ –∑–∞–¥–∞—á–∞ –æ—Ç–º–µ–Ω–∏—Ç—å —ç—Ç–æ—Ç –ø—Ä–æ—Ü–µ—Å—Å.
25. –ò–¥–µ–º –≤ TodolistsList.tsx –∏ –º–µ–Ω—è–µ–º useEffect, —á—Ç–æ –µ—Å–ª–∏ —É –Ω–∞—Å –Ω–µ—Ç todolists(todolists.length) —Ç–æ —Å–¥–µ–ª–∞–π –∑–∞–ø—Ä–æ—Å
–Ω–∞ —Å–µ—Ä–≤–µ—Ä:
  useEffect(() => {
    if (!isLoggedIn || demo) {
      return
    }
    // fetchTodolists()
    if(!todolists.length) {
      fetchTodolists()
    }
  }, [])
  26. –¢–∞–∫ –∫–∞–∫ —É –º–µ–Ω—è —Å–¥–µ–ª–∞–Ω–æ —á—Ç–æ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ todolist –ø–æ–¥—Ç—è–≥–∏–≤–∞—é—Ç—Å—è —Å–≤–æ–∏ tasks —Ç–æ —É –º–µ–Ω—è –±–æ–ª—å—à–µ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω—É–∂–Ω–æ –¥–µ–ª–∞—Ç—å.
  27. –ï—â–µ —Ä–∞–∑ –≤–∞—Ä–∏–∞–Ω—Ç —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –¥–ª–∏–Ω—ã –Ω–µ —Å–æ–≤—Å–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –Ω—É–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ store  –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç
  —Å–æ–æ–±—â–∞—Ç—å, —á—Ç–æ todolists –ø—Ä–∏—à–ª–∏ –≤ state
  28. –ü–æ–ø—Ä–æ–±—É–µ–º –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ —Ç–∞—Å–∫–∏ –≤ tasksSlice.ts-->
        .addCase(todolistsThunks.removeTodolist.fulfilled, (state, action) => {
        delete state[action.payload.todolistId]
      })
29. –¢–µ–ø–µ—Ä—å –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–µ task –≤ Network –≤–∏–¥–Ω–æ —á—Ç–æ —Å–µ—Ä–≤–µ—Ä —É–¥–∞–ª–∏–ª task –Ω–æ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ –ø—Ä–æ–∏–∑–æ—à–ª–æ —Ç–∞–∫ –∫–∞–∫ –º—ã
 –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–ª–∏ —É–¥–∞–ª–µ–Ω–∏–µ —Ç–∞—Å–∫–∏ –∏ —ç—Ç–æ –±—É–¥–µ—Ç –≤–∏–¥–Ω–æ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Redux-->tasks/fetchTasks/fulfilled –Ω–µ —É–¥–∞–ª–∏–ª–∞—Å—å.
 –ï—Å–ª–∏ –º—ã —Ä–∞—Å –∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–µ–º —Ç–æ –≤—Å–µ –∑–∞—Ä–∞–±–æ—Ç–∞–µ—Ç –∏ state –∏–∑–º–µ–Ω–∏—Ç—å—Å—è –Ω–∞ –ª–µ—Ç—É(–¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏) —Ç–æ–ª—å–∫–æ —Ç—É —á–∞—Å—Ç—å —á—Ç–æ –±—ã–ª–∞ –∏–∑–º–µ–Ω–µ–Ω–∞.
 –≠—Ç–æ –æ—á–µ–Ω—å —É–¥–æ–±–Ω–æ –ø—Ä–∏ –Ω–∞–ø–∏—Å–∞–Ω–∏–µ —Ä–µ–¥—é—Å–µ—Ä–æ–≤.
30. –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ –≤—Å–µ–≥–æ —ç—Ç–æ–≥–æ —á—Ç–æ state –Ω–µ –ø–µ—Ä–µ–∏–∑–±–∏—Ä–∞–µ—Ç—Å—è –∑–∞–Ω–æ–≤–æ –∏ –¥–∞–Ω–Ω—ã–µ –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏—Ö–æ–¥—è—Ç –Ω–µ backend –Ω–µ –ø–æ—Ç–µ—Ä–µ—Ç—å—Å—è.
–ê —Ç–∞–∫ –∂–µ –Ω–µ—Ç –ª–∏—à–Ω–∏—Ö –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–æ–∫.






 */


